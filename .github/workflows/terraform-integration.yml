name: Terraform Cluster Deploy

on:
  workflow_run:
    workflows: ["Deploy Helm Chart to EKS"]
    types:
      - completed

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name academy-eks-cluster

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform/integration
        run: |
          export TF_LOG=DEBUG
          terraform init

      - name: Terraform Apply
        working-directory: ./terraform/integration
        run: |
          NLB_DNS=$(aws elbv2 describe-load-balancers --query "LoadBalancers[?DNSName=='$(kubectl get svc fiapx-user-management-svc -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')'].[LoadBalancerArn]" --output text)
          echo ${NLB_DNS}
          LISTENER_ARN=$(aws elbv2 describe-listeners \
          --load-balancer-arn "${NLB_DNS}" \
          --query "Listeners[0].ListenerArn" \
          --output text)
          terraform apply -auto-approve \
          -var "aws_region=us-east-1" \
          -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var "aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
          -var "nlb_dns=${LISTENER_ARN}"

